language: python

python:
  - "2.7"

dist: trusty

sudo: required

cache:
  bundler: true
  directories:
    - $HOME/docker

jobs:
  include:
    - stage: Style

      install:
        - pip install flake8

      script:
        - flake8 --exclude "" --ignore=E501,F403,F405 geotrek/settings
        - flake8 geotrek
        # prevent SRID value in migrations
        - find geotrek/*/migrations/*.py | xargs grep -l srid | xargs grep -L SRID

    - stage: Docker build

      install:
        - sudo curl -L https://github.com/docker/compose/releases/download/1.21.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
        - sudo chmod +x /usr/local/bin/docker-compose

      script:
        - make build

      before_cache:
        # cache build image
        - rm -rf $HOME/docker
        - mkdir -p $HOME/docker && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}' | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'

    - stage: Unit tests

      before_install:
        - mkdir -p var
        - export GEOTREK_VERSION=$(cat VERSION)
        - export DOMAIN_NAME=geotrek.test
        - sudo service postgresql stop

      install:
        # Load cached docker images
        - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
        # pull images
        - docker pull makinacorpus/geodjango:bionic-py2
        - docker pull redis:4.0-alpine
        - docker pull makinacorpus/convertit
        - docker pull makinacorpus/screamshotter
        - docker pull makinacorpus/postgis:10-2.4

      before_script:
        - docker-compose up -d postgres
        - sleep 15
        - docker-compose run web initial.sh

      script:
        - docker-compose run web /bin/sh -c exit
        - docker-compose run web coverage run ./manage.py test --settings=geotrek.settings.tests

    - stage: Deploy prod + Integration test

      before_install:
       - mkdir -p install/var
       - export GEOTREK_VERSION=$(cat VERSION)
       - export DOMAIN_NAME=geotrek.test
       - echo '127.0.0.1    '$DOMAIN_NAME | sudo tee -a /etc/hosts
       - sudo service postgresql stop

      install:
       # unzip docker images for cache
       - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
       # pull images
       - docker pull makinacorpus/geodjango:bionic-py2
       - docker pull redis:4.0-alpine
       - docker pull makinacorpus/convertit
       - docker pull makinacorpus/screamshotter
       - docker pull makinacorpus/postgis:10-2.4
       - docker pull memcached:1.5-alpine
       - docker pull nginx:1.13
       # install production env
       - cd install
       - cp .env.dist .env
       - sed -i.bak 's/^\(POSTGRES_USER=\).*/\1test/' .env
       - sed -i.bak 's/^\(POSTGRES_DB=\).*/\1test/' .env
       - sed -i.bak 's/^\(POSTGRES_PASSWORD=\).*/\1test/' .env
       - sed -i.bak 's/^\(DOMAIN_NAME=\).*/\1'$DOMAIN_NAME'/' .env
       - sed -i.bak 's/^\(SECRET_KEY=\).*/\1key-test-key-test/' .env
       # clean and install capserjs + phantomjs
       - sudo rm -rf /usr/local/bin/phantomjs* /usr/bin/phantomjs* /usr/local/phantomjs*
       - sudo wget --quiet https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.7-linux-x86_64.tar.bz2 -O phantomjs.tar.bz2
       - sudo tar -jxvf phantomjs.tar.bz2
       - sudo rm phantomjs.tar.bz2
       - export PATH=$PATH:$PWD/phantomjs-1.9.7-linux-x86_64/bin/
       - sudo wget --quiet https://github.com/n1k0/casperjs/archive/1.1-beta3.zip -O casperjs.zip
       - sudo unzip -o casperjs.zip
       - sudo rm casperjs.zip
       - export PATH=$PATH:$PWD/casperjs-1.1-beta3/bin/
       # install npm test dependencies
       - npm install ../geotrek/jstests

      before_script:
       - docker-compose up -d postgres
       - sleep 15
       - docker-compose run web initial.sh
       - docker-compose run web ./manage.py loaddata development-pne
       - docker-compose up -d

      script:
       - casperjs --baseurl=http://$DOMAIN_NAME test ../geotrek/jstests/nav-*.js

      deploy:
        provider: script
        script: bash ../docker/docker_push.sh
        skip_cleanup: true
        on:
          branch: master
